/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sims.ui;

import java.awt.Color;
import java.awt.Font;
import java.awt.font.TextAttribute;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import sims.database.DatabaseConnector;
import sims.helper.Validator;
import sims.model.Email;
import sims.model.Fee;
import sims.model.Student;
import sims.model.StudentSubject;

/**
 *
 * @author Jireh
 */
public class NewLoginFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewLoginFrame
     */
    public NewLoginFrame() {
        initComponents();
        passwordField.setEchoChar((char)0);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        FormSection = new javax.swing.JPanel();
        ForbiddenTechnique = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        FormHeader = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ImgContainer = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        FormContainer = new javax.swing.JPanel();
        studentNumberOrEmailField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        passwordField = new javax.swing.JPasswordField();
        jPanel4 = new javax.swing.JPanel();
        loginButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        SignUpLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(null);

        jPanel1.setLayout(new java.awt.GridLayout(0, 2));

        jPanel2.setOpaque(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 646, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2);

        FormSection.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        ForbiddenTechnique.setPreferredSize(new java.awt.Dimension(320, 1));

        jRadioButton1.setText("jRadioButton1");

        javax.swing.GroupLayout ForbiddenTechniqueLayout = new javax.swing.GroupLayout(ForbiddenTechnique);
        ForbiddenTechnique.setLayout(ForbiddenTechniqueLayout);
        ForbiddenTechniqueLayout.setHorizontalGroup(
            ForbiddenTechniqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ForbiddenTechniqueLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jRadioButton1)
                .addContainerGap(158, Short.MAX_VALUE))
        );
        ForbiddenTechniqueLayout.setVerticalGroup(
            ForbiddenTechniqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ForbiddenTechniqueLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jRadioButton1))
        );

        FormSection.add(ForbiddenTechnique);

        FormHeader.setPreferredSize(new java.awt.Dimension(640, 100));
        FormHeader.setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setFont(new java.awt.Font("JetBrains Mono", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LOGIN");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        FormHeader.add(jLabel1);

        FormSection.add(FormHeader);

        ImgContainer.setPreferredSize(new java.awt.Dimension(640, 190));
        ImgContainer.setLayout(new java.awt.GridLayout(1, 0));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "\\src\\sims\\assets\\user.png"));
        ImgContainer.add(jLabel2);

        FormSection.add(ImgContainer);

        FormContainer.setPreferredSize(new java.awt.Dimension(640, 260));

        studentNumberOrEmailField.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        studentNumberOrEmailField.setForeground(new java.awt.Color(102, 102, 102));
        studentNumberOrEmailField.setText("Student Number or Email");
        studentNumberOrEmailField.setPreferredSize(new java.awt.Dimension(420, 40));
        studentNumberOrEmailField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studentNumberOrEmailFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                studentNumberOrEmailFieldFocusLost(evt);
            }
        });
        FormContainer.add(studentNumberOrEmailField);

        jPanel3.setOpaque(false);
        jPanel3.setPreferredSize(new java.awt.Dimension(420, 20));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        FormContainer.add(jPanel3);

        passwordField.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        passwordField.setForeground(new java.awt.Color(102, 102, 102));
        passwordField.setText("Enter Password");
        passwordField.setToolTipText("hello");
        passwordField.setPreferredSize(new java.awt.Dimension(420, 40));
        passwordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordFieldFocusLost(evt);
            }
        });
        FormContainer.add(passwordField);

        jPanel4.setOpaque(false);
        jPanel4.setPreferredSize(new java.awt.Dimension(420, 20));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        FormContainer.add(jPanel4);

        loginButton.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        loginButton.setText("Login");
        loginButton.setPreferredSize(new java.awt.Dimension(420, 40));
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        FormContainer.add(loginButton);

        jPanel5.setOpaque(false);
        jPanel5.setPreferredSize(new java.awt.Dimension(420, 20));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        FormContainer.add(jPanel5);

        jPanel6.setPreferredSize(new java.awt.Dimension(420, 30));
        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        jLabel3.setFont(new java.awt.Font("JetBrains Mono", 0, 14)); // NOI18N
        jLabel3.setText("Don't have an account yet?");
        jPanel6.add(jLabel3);

        SignUpLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 14)); // NOI18N
        SignUpLabel.setText(" Sign up");
        SignUpLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SignUpLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SignUpLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SignUpLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SignUpLabelMouseExited(evt);
            }
        });
        jPanel6.add(SignUpLabel);

        FormContainer.add(jPanel6);

        FormSection.add(FormContainer);

        jPanel1.add(FormSection);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1292, 720);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void passwordFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFieldFocusGained
        if(passwordField.getText().equals("Enter Password")){
            passwordField.setEchoChar('*');
            passwordField.setText("");
            passwordField.setForeground(new Color(187,187,187));
        }
    }//GEN-LAST:event_passwordFieldFocusGained

    private void passwordFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFieldFocusLost
        if(passwordField.getText().equals("")){
            passwordField.setEchoChar((char)0);
            passwordField.setText("Enter Password");
            passwordField.setForeground(new Color(102,102,102));
            
        }
    }//GEN-LAST:event_passwordFieldFocusLost

    private void studentNumberOrEmailFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentNumberOrEmailFieldFocusGained
        if(studentNumberOrEmailField.getText().equals("Student Number or Email")){
            studentNumberOrEmailField.setText("");
            studentNumberOrEmailField.setForeground(new Color(187,187,187));
        }
    }//GEN-LAST:event_studentNumberOrEmailFieldFocusGained

    private void studentNumberOrEmailFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentNumberOrEmailFieldFocusLost
        if(studentNumberOrEmailField.getText().equals("")){
            studentNumberOrEmailField.setText("Student Number or Email");
            studentNumberOrEmailField.setForeground(new Color(102,102,102));
        }
    }//GEN-LAST:event_studentNumberOrEmailFieldFocusLost

    private void SignUpLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpLabelMouseEntered
        Font font = SignUpLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        SignUpLabel.setFont(font.deriveFont(attributes));
        
    }//GEN-LAST:event_SignUpLabelMouseEntered

    private void SignUpLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpLabelMouseExited
        SignUpLabel.setFont(new Font("JetBrains Mono", Font.PLAIN, 14));
    }//GEN-LAST:event_SignUpLabelMouseExited

    private void SignUpLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpLabelMouseClicked
        this.dispose();
        var newSignUpFrame = new NewSignUpFrame();
        newSignUpFrame.setVisible(true);
    }//GEN-LAST:event_SignUpLabelMouseClicked

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        String password = new String(passwordField.getPassword());
        var validator = new Validator();
        
        if (!validator.isValidText(studentNumberOrEmailField.getText(),false)) {
            Modal.show("Student/Email field must have a value.", "Invalid Input", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (!validator.isValidText(password,false)) {
            Modal.show("Password field must be valid.", "Invalid Input", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String selectStudentQuery = """
                      SELECT * FROM student 
                      INNER JOIN student_info
                      	on student.id = student_info.studentId
                      WHERE password = '%s'
                      AND studentNumber = '%s'
                      OR email = '%s'
                      """.formatted(password,studentNumberOrEmailField.getText(),studentNumberOrEmailField.getText());
        
        try (var conn = DatabaseConnector.getConnection();
             var selectStudentStmt = conn.createStatement();
             var studentResultSet = selectStudentStmt.executeQuery(selectStudentQuery);) {
            
            // if there are no results returned
            if (!studentResultSet.isBeforeFirst()) {
                Modal.show("No student found!", "Notice", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            // TODO OPTIONAL: set new student's info, current sem, section etc.
            //======================================================================
            // STUDENT INFO QUERY
            //======================================================================
            var student = new Student(); // maybe we can serialize/save this to save the current logged in user.
            while (studentResultSet.next()) {
                var studentEmail = new Email(studentResultSet.getString("firstName"), studentResultSet.getString("lastName"), studentResultSet.getString("department"));
                
                //======================================================================
                // ABSOLUTE COLUMNS
                //======================================================================  
                studentEmail.setPassword(studentResultSet.getString("password"));
                student.setEmail(studentEmail);
                student.setId(studentResultSet.getInt("id"));
                student.setStudentNumber(studentResultSet.getString("studentNumber"));
                student.setYearLevel(studentResultSet.getString("yearLevel"));
                student.setSection(studentResultSet.getString("section"));
                student.setCurrentSem(studentResultSet.getString("currentSem"));
                
                //======================================================================
                // NULLABLE COLUMNS
                //======================================================================    
                if (studentResultSet.getString("middleName") != null) student.setMiddleName(studentResultSet.getString("middleName"));
                if (studentResultSet.getString("sex") != null) student.setSex(studentResultSet.getString("sex"));
                if (studentResultSet.getString("contactNumber") != null) student.setContactNumber(studentResultSet.getString("contactNumber"));
                if (studentResultSet.getString("birthday") != null) student.setBirthday(studentResultSet.getString("birthday"));
                if (studentResultSet.getString("guardianName") != null) student.setGuardianName(studentResultSet.getString("guardianName"));
                if (studentResultSet.getString("alternativeEmail") != null) studentEmail.setReserveEmail(studentResultSet.getString("alternativeEmail"));
                if (studentResultSet.getString("address") != null) student.setAddress(studentResultSet.getString("address"));
            }
            
            //======================================================================
            // STUDENT SUBJECTS QUERY
            //======================================================================
            String selectStudentSubjectsQuery = """
                                                SELECT subject.subjectCode,
                                                subject.faculty,
                                                subject.subjectTitle,
                                                subject.remarks,
                                                subject.units,
                                                subject.grade,
                                                subject.semester,
                                                subject.yearLevel
                                                FROM subject
                                                	inner join student
                                                	on subject.studentId  = student.id
                                                where subject.studentId = %d
                                                """.formatted(student.getId());
            
            var selectStudentSubjectsStmt = conn.prepareStatement(selectStudentSubjectsQuery);
            var studentSubjectsResultSet = selectStudentSubjectsStmt.executeQuery();
            
            var studentSubjects = new LinkedList<StudentSubject>();
            
            while(studentSubjectsResultSet.next()) {
                var subject = new StudentSubject(studentSubjectsResultSet.getString("subjectCode"),
                        studentSubjectsResultSet.getString("subjectTitle"), 
                        studentSubjectsResultSet.getString("faculty"), 
                        studentSubjectsResultSet.getString("units"), 
                        studentSubjectsResultSet.getString("yearLevel"),studentSubjectsResultSet.getString("semester"));
                subject.setGrade(studentSubjectsResultSet.getDouble("grade"));
                
                studentSubjects.add(subject);
            }
            
            // set student instance subjects
            student.setSubjects(studentSubjects);
            selectStudentSubjectsStmt.close();
            studentSubjectsResultSet.close();
            
            //======================================================================
            // STUDENT FEES QUERY
            //======================================================================
            
            String selectStudentFeesQuery = """
                                       SELECT fee.id,fee.title,fee.isPending,fee.amount,fee.dueDate
                                       FROM fee
                                       INNER JOIN student
                                       	ON student.id = fee.studentId
                                       WHERE fee.studentId = %d
                                       """.formatted(student.getId());
            var selectStudentFeesStmt = conn.prepareStatement(selectStudentFeesQuery);
            var studentFeesResultSet = selectStudentFeesStmt.executeQuery();
            
            var studentFees = new LinkedList<Fee>();
            
            while(studentFeesResultSet.next()) {
                var fee = new Fee(studentFeesResultSet.getString("title"),studentFeesResultSet.getString("dueDate"),studentFeesResultSet.getDouble("amount"));
                fee.setId(studentFeesResultSet.getInt("id"));
                fee.setIsPending(studentFeesResultSet.getBoolean("isPending"));
                
                studentFees.add(fee);
            }
            
            student.setFees(studentFees);
            
            selectStudentFeesStmt.close();
            studentFeesResultSet.close();
            
            System.out.println(student);
            Modal.show("You will now be redirected to the dashboard.", "Login success!", JOptionPane.INFORMATION_MESSAGE);
            
            var homepage = new WindowFrame(student);
            homepage.setLocationRelativeTo(null);
            homepage.setVisible(true);
            
            this.dispose();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewLoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewLoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewLoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewLoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewLoginFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ForbiddenTechnique;
    private javax.swing.JPanel FormContainer;
    private javax.swing.JPanel FormHeader;
    private javax.swing.JPanel FormSection;
    private javax.swing.JPanel ImgContainer;
    private javax.swing.JLabel SignUpLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField studentNumberOrEmailField;
    // End of variables declaration//GEN-END:variables
}
