/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sims.ui;

import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.font.TextAttribute;
import java.sql.Connection;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import sims.Abstract.DefaultSubject;
import sims.database.DatabaseConnector;
import sims.helper.Validator;
import sims.model.DASSubjects;
import sims.model.DCSComSciSubjects;
import sims.model.DCSInformationTechSubjects;
import sims.model.DOCSubjects;
import sims.model.DOEMajorEnglishSubjects;
import sims.model.DOEMajorMathSubjects;
import sims.model.Email;
import sims.model.Fee;
import sims.model.StudentSubject;

/**
 *
 * @author Jireh
 */
public class NewSignUpFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewSignUpFrame
     */
    public NewSignUpFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        FormSection = new javax.swing.JPanel();
        ForbiddenTechnique = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jPanel16 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        FormContainer = new javax.swing.JPanel();
        firstNameField = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        lastNameField = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        studentNumberField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        sexComboBox = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        departmentComboBox = new javax.swing.JComboBox<>();
        jPanel26 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        yearLevelComboBox = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        sectionComboBox = new javax.swing.JComboBox<>();
        jPanel27 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        currentSemComboBox = new javax.swing.JComboBox<>();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        signUpButton = new javax.swing.JButton();
        jPanel23 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        SignInLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(null);

        jPanel13.setLayout(new java.awt.GridLayout(0, 2));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );

        jPanel13.add(jPanel14);

        FormSection.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        ForbiddenTechnique.setPreferredSize(new java.awt.Dimension(320, 1));

        jRadioButton1.setText("jRadioButton1");

        javax.swing.GroupLayout ForbiddenTechniqueLayout = new javax.swing.GroupLayout(ForbiddenTechnique);
        ForbiddenTechnique.setLayout(ForbiddenTechniqueLayout);
        ForbiddenTechniqueLayout.setHorizontalGroup(
            ForbiddenTechniqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ForbiddenTechniqueLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jRadioButton1)
                .addContainerGap(147, Short.MAX_VALUE))
        );
        ForbiddenTechniqueLayout.setVerticalGroup(
            ForbiddenTechniqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ForbiddenTechniqueLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jRadioButton1))
        );

        FormSection.add(ForbiddenTechnique);

        jPanel16.setPreferredSize(new java.awt.Dimension(640, 70));
        jPanel16.setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setFont(new java.awt.Font("JetBrains Mono", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("REGISTER");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel16.add(jLabel1);

        FormSection.add(jPanel16);

        jPanel3.setPreferredSize(new java.awt.Dimension(640, 20));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        FormSection.add(jPanel3);

        jPanel21.setPreferredSize(new java.awt.Dimension(640, 190));
        jPanel21.setLayout(new java.awt.GridLayout(1, 0));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "\\src\\sims\\assets\\user.png"));
        jPanel21.add(jLabel2);

        FormSection.add(jPanel21);

        FormContainer.setOpaque(false);
        FormContainer.setPreferredSize(new java.awt.Dimension(640, 380));
        FormContainer.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        firstNameField.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        firstNameField.setForeground(new java.awt.Color(102, 102, 102));
        firstNameField.setText("First Name");
        firstNameField.setPreferredSize(new java.awt.Dimension(260, 40));
        firstNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                firstNameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                firstNameFieldFocusLost(evt);
            }
        });
        FormContainer.add(firstNameField);

        jPanel15.setPreferredSize(new java.awt.Dimension(40, 40));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        FormContainer.add(jPanel15);

        lastNameField.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        lastNameField.setForeground(new java.awt.Color(102, 102, 102));
        lastNameField.setText("Last Name");
        lastNameField.setPreferredSize(new java.awt.Dimension(260, 40));
        lastNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lastNameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                lastNameFieldFocusLost(evt);
            }
        });
        FormContainer.add(lastNameField);

        jPanel17.setPreferredSize(new java.awt.Dimension(640, 20));

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        FormContainer.add(jPanel17);

        studentNumberField.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        studentNumberField.setForeground(new java.awt.Color(102, 102, 102));
        studentNumberField.setText("Student Number");
        studentNumberField.setPreferredSize(new java.awt.Dimension(560, 40));
        studentNumberField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studentNumberFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                studentNumberFieldFocusLost(evt);
            }
        });
        FormContainer.add(studentNumberField);

        jPanel5.setPreferredSize(new java.awt.Dimension(640, 20));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        FormContainer.add(jPanel5);

        jPanel25.setPreferredSize(new java.awt.Dimension(560, 50));
        jPanel25.setLayout(new java.awt.GridLayout(0, 2));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        jLabel9.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Sex");
        jLabel9.setPreferredSize(new java.awt.Dimension(140, 25));
        jPanel4.add(jLabel9);

        sexComboBox.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        sexComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        sexComboBox.setPreferredSize(new java.awt.Dimension(100, 40));
        jPanel4.add(sexComboBox);

        jPanel25.add(jPanel4);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 0, 0));

        jLabel10.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Department");
        jLabel10.setPreferredSize(new java.awt.Dimension(140, 25));
        jPanel6.add(jLabel10);

        departmentComboBox.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        departmentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DAS", "DCS-IT", "DCS-CS", "DOC", "DOE-EN", "DOE-MATH" }));
        departmentComboBox.setPreferredSize(new java.awt.Dimension(120, 40));
        jPanel6.add(departmentComboBox);

        jPanel25.add(jPanel6);

        FormContainer.add(jPanel25);

        jPanel26.setPreferredSize(new java.awt.Dimension(560, 50));
        jPanel26.setLayout(new java.awt.GridLayout(0, 2));

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        jLabel11.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("Year Level");
        jLabel11.setPreferredSize(new java.awt.Dimension(140, 25));
        jPanel7.add(jLabel11);

        yearLevelComboBox.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        yearLevelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        yearLevelComboBox.setPreferredSize(new java.awt.Dimension(100, 40));
        jPanel7.add(yearLevelComboBox);

        jPanel26.add(jPanel7);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 0, 0));

        jLabel12.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("Section");
        jLabel12.setPreferredSize(new java.awt.Dimension(160, 25));
        jPanel8.add(jLabel12);

        sectionComboBox.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        sectionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6" }));
        sectionComboBox.setPreferredSize(new java.awt.Dimension(100, 40));
        jPanel8.add(sectionComboBox);

        jPanel26.add(jPanel8);

        FormContainer.add(jPanel26);

        jPanel27.setPreferredSize(new java.awt.Dimension(560, 50));
        jPanel27.setLayout(new java.awt.GridLayout(0, 2));

        jPanel18.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        jLabel13.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText("Current Sem");
        jLabel13.setPreferredSize(new java.awt.Dimension(140, 25));
        jPanel18.add(jLabel13);

        currentSemComboBox.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        currentSemComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));
        currentSemComboBox.setPreferredSize(new java.awt.Dimension(100, 40));
        jPanel18.add(currentSemComboBox);

        jPanel27.add(jPanel18);

        jPanel19.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 0, 0));
        jPanel27.add(jPanel19);

        FormContainer.add(jPanel27);

        jPanel20.setPreferredSize(new java.awt.Dimension(640, 20));

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        FormContainer.add(jPanel20);

        signUpButton.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        signUpButton.setText("Sign Up");
        signUpButton.setPreferredSize(new java.awt.Dimension(420, 40));
        signUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpButtonActionPerformed(evt);
            }
        });
        FormContainer.add(signUpButton);

        jPanel23.setOpaque(false);
        jPanel23.setPreferredSize(new java.awt.Dimension(420, 20));

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        FormContainer.add(jPanel23);

        jPanel22.setPreferredSize(new java.awt.Dimension(420, 30));
        jPanel22.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        jLabel3.setFont(new java.awt.Font("JetBrains Mono", 0, 14)); // NOI18N
        jLabel3.setText("Already have an account?");
        jPanel22.add(jLabel3);

        SignInLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 14)); // NOI18N
        SignInLabel.setText(" Sign in");
        SignInLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SignInLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SignInLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SignInLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SignInLabelMouseExited(evt);
            }
        });
        jPanel22.add(SignInLabel);

        FormContainer.add(jPanel22);

        FormSection.add(FormContainer);

        jPanel13.add(FormSection);

        getContentPane().add(jPanel13);
        jPanel13.setBounds(0, 0, 1280, 720);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SignInLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignInLabelMouseEntered
        Font font = SignInLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        SignInLabel.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_SignInLabelMouseEntered

    private void SignInLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignInLabelMouseExited
        SignInLabel.setFont(new Font("JetBrains Mono", Font.PLAIN, 14));
    }//GEN-LAST:event_SignInLabelMouseExited

    private void firstNameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstNameFieldFocusGained
        if (firstNameField.getText().equals("First Name")) {
            firstNameField.setText("");
            firstNameField.setForeground(new Color(187, 187, 187));
        }
    }//GEN-LAST:event_firstNameFieldFocusGained

    private void SignInLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignInLabelMouseClicked
        this.dispose();
        var newLoginFrame = new NewLoginFrame();
        newLoginFrame.setVisible(true);
    }//GEN-LAST:event_SignInLabelMouseClicked

    private void firstNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstNameFieldFocusLost
        if (firstNameField.getText().equals("")) {
            firstNameField.setText("First Name");
            firstNameField.setForeground(new Color(102, 102, 102));
        }
    }//GEN-LAST:event_firstNameFieldFocusLost

    private void lastNameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastNameFieldFocusGained
        if (lastNameField.getText().equals("Last Name")) {
            lastNameField.setText("");
            lastNameField.setForeground(new Color(187, 187, 187));
        }
    }//GEN-LAST:event_lastNameFieldFocusGained

    private void lastNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastNameFieldFocusLost
        if (lastNameField.getText().equals("")) {
            lastNameField.setText("Last Name");
            lastNameField.setForeground(new Color(102, 102, 102));
        }
    }//GEN-LAST:event_lastNameFieldFocusLost

    private void studentNumberFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentNumberFieldFocusGained
        if (studentNumberField.getText().equals("Student Number")) {
            studentNumberField.setText("");
            studentNumberField.setForeground(new Color(187, 187, 187));
        }
    }//GEN-LAST:event_studentNumberFieldFocusGained

    private void studentNumberFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentNumberFieldFocusLost
        if (studentNumberField.getText().equals("")) {
            studentNumberField.setText("Student Number");
            studentNumberField.setForeground(new Color(102, 102, 102));
        }
    }//GEN-LAST:event_studentNumberFieldFocusLost

    private void signUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpButtonActionPerformed
        var validator = new Validator();

        if (firstNameField.getText().equals("First Name") || !validator.isValidText(firstNameField.getText(), true)) {
            Modal.show("First Name must be valid.", "Invalid First Name", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (lastNameField.getText().equals("Last Name") || !validator.isValidText(lastNameField.getText(), true)) {
            Modal.show("Last Name must be valid.", "Invalid Last Name", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // TODO: add max length of student num
        if (!studentNumberField.getText().matches("[0-9]+")) {
            Modal.show("Student Number must only be numbers.", "Invalid Student Number", JOptionPane.WARNING_MESSAGE);
            return;
        }

        var email = new Email(firstNameField.getText(), lastNameField.getText(), departmentComboBox.getSelectedItem().toString());
        System.out.println(email.showInfo());

        String studentQuery = "INSERT INTO student (firstName,lastName,department,studentNumber,email,password,yearLevel,section,currentSem,sex) VALUES('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')"
                .formatted(email.getFirstName(),
                        email.getLastName(),
                        email.getDepartment(),
                        studentNumberField.getText(),
                        email.getEmail(),
                        email.getPassword(),
                        yearLevelComboBox.getSelectedItem().toString(),
                        sectionComboBox.getSelectedItem().toString(),
                        currentSemComboBox.getSelectedItem().toString(),
                        sexComboBox.getSelectedItem().toString());

        try (var conn = DatabaseConnector.getConnection(); var insertStudentStmt = conn.prepareStatement(studentQuery)) {

            int rowsInserted = insertStudentStmt.executeUpdate();

            if (rowsInserted > 0) {
                System.out.println("Student inserted into the Database.");
                Modal.show("Success, you can now login. The password is in your clipboard.", "Login Success", JOptionPane.INFORMATION_MESSAGE);
                Toolkit.getDefaultToolkit()
                        .getSystemClipboard()
                        .setContents(new StringSelection(email.getPassword()), null);

                var keys = insertStudentStmt.getGeneratedKeys();

                if (keys.next()) {
                    int id = keys.getInt(1);
                    System.out.println("Inserted id: " + id);

                    String studentInfoQuery = "INSERT INTO student_info (studentId) VALUES (%d)".formatted(id);
                    var insertStudentInfoStmt = conn.prepareStatement(studentInfoQuery);

                    int insertedStudentInfoRows = insertStudentInfoStmt.executeUpdate();

                    if (insertedStudentInfoRows > 0) {
                        System.out.println("Student Info was INSERTED into the Database.");
                    } else {
                        System.out.println("Student Info was NOT INSERTED into the Database");
                    }

                    insertStudentInfoStmt.close();

                    //==========================================================
                    // INSERT DEEFAULT SUBJECTS
                    //==========================================================
                    String yearLevel = yearLevelComboBox.getSelectedItem().toString();
                    String currentSem = currentSemComboBox.getSelectedItem().toString();
                    String department = email.getDepartment().toUpperCase();

                    insertSubjectsBasedOnDepartment(id, department, yearLevel, currentSem, conn);

                    //==========================================================
                    // INSERT DEEFAULT FEES
                    //==========================================================
                    // FOR NOW, ALL HAVE SOCIETY FEES
                    String nextMonth = LocalDate.now().plusMonths(1).toString();
                    var socFee = new Fee("Society Fee", nextMonth, 150);

                    String insertSocFeeQuery = "INSERT INTO fee (studentId,title,isPending,amount,dueDate) VALUES (%d,'%s','%d','%f','%s')"
                            .formatted(id, socFee.getTitle(), socFee.getIsPending() ? 1 : 0, socFee.getAmount(), socFee.getDueDate());

                    var insertSocFeeStmt = conn.prepareStatement(insertSocFeeQuery);

                    int insertedSocFeeRows = insertSocFeeStmt.executeUpdate();

                    System.out.println("INSERTED %d FEE".formatted(insertedSocFeeRows));
                    insertSocFeeStmt.close();

                }
                this.dispose();

                var loginFrame = new NewLoginFrame();
                loginFrame.setLocationRelativeTo(null);
                loginFrame.setVisible(true);
            }

        } catch (SQLException | ClassNotFoundException ex) {
            String message = ex.getMessage().contains("Duplicate") ? "Student Number is already taken." : "Something went wrong";
            Modal.show(message, "Error", JOptionPane.ERROR_MESSAGE);

            Logger.getLogger(NewSignUpFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_signUpButtonActionPerformed

    private void insertSubjectsBasedOnDepartment(int studentId, String department, String yearLevel, String currentSem, Connection conn) throws SQLException {
        DefaultSubject defaultSubjects;
        List<StudentSubject> subjects = new LinkedList<>();

        switch (department) {
            case "DOC" -> {
                defaultSubjects = new DOCSubjects();
                subjects = getSubjectsByYearLevelAndSemester(yearLevel, currentSem, defaultSubjects);
            }

            case "DCS-CS" -> {
                defaultSubjects = new DCSComSciSubjects();
                subjects = getSubjectsByYearLevelAndSemester(yearLevel, currentSem, defaultSubjects);
            }

            case "DCS-IT" -> {
                defaultSubjects = new DCSInformationTechSubjects();
                subjects = getSubjectsByYearLevelAndSemester(yearLevel, currentSem, defaultSubjects);
            }

            case "DAS" -> {
                defaultSubjects = new DASSubjects();
                subjects = getSubjectsByYearLevelAndSemester(yearLevel, currentSem, defaultSubjects);
            }

            case "DOE-Math" -> {
                defaultSubjects = new DOEMajorMathSubjects();
                subjects = getSubjectsByYearLevelAndSemester(yearLevel, currentSem, defaultSubjects);
            }
            case "DOE-EN" -> {
                defaultSubjects = new DOEMajorEnglishSubjects();
                subjects = getSubjectsByYearLevelAndSemester(yearLevel, currentSem, defaultSubjects);
            }
        }

        int successfulSubjectInsert = 0;
        int failedSubjectInsert = 0;
        for (var subject : subjects) {
            System.out.println(subject);
            String insertSubjectQuery = "INSERT INTO subject (studentId,subjectCode,faculty,subjectTitle,units,semester,yearLevel) VALUES (%d,'%s','%s','%s','%s','%s','%s')"
                    .formatted(studentId,
                            subject.getSubjectCode(),
                            subject.getFaculty(),
                            subject.getSubjectTitle(),
                            subject.getUnits(),
                            subject.getSemester(),
                            subject.getYearLevel());

            var insertSubjectStmt = conn.prepareStatement(insertSubjectQuery);

            int insertedSubjectsRows = insertSubjectStmt.executeUpdate();

            if (insertedSubjectsRows > 0) {
                successfulSubjectInsert++;
            } else {
                failedSubjectInsert++;
            }

            insertSubjectStmt.close();
        }

        System.out.println("""
                            \nSUCCESSFULLY INSERTED %d SUBJECTS
                            WITH %d FAILED INSERTIONS.
                            """.formatted(successfulSubjectInsert, failedSubjectInsert));
    }

    private List<StudentSubject> getSubjectsByYearLevelAndSemester(String yearLevel, String currentSem, DefaultSubject defaultSubjects) {
        if (yearLevel.equals("1") && currentSem.equals("1")) {
            return defaultSubjects.getFirstYearFirstSem();
        } else if (yearLevel.equals("1") && currentSem.equals("2")) {
            return defaultSubjects.getFirstYearSecondSem();
        } else if (yearLevel.equals("2") && currentSem.equals("1")) {
            return defaultSubjects.getSecondYearFirstSem();
        } else if (yearLevel.equals("2") && currentSem.equals("2")) {
            return defaultSubjects.getSecondYearSecondSem();
        } else if (yearLevel.equals("3") && currentSem.equals("1")) {
            return defaultSubjects.getThirdYearFirstSem();
        } else if (yearLevel.equals("3") && currentSem.equals("2")) {
            return defaultSubjects.getThirdYearSecondSem();
        } else if (yearLevel.equals("4") && currentSem.equals("1")) {
            return defaultSubjects.getFourthYearFirstSem();
        } else if (yearLevel.equals("4") && currentSem.equals("2")) {
            return defaultSubjects.getFourthYearSecondSem();
        } else {
            return null;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewSignUpFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewSignUpFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewSignUpFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewSignUpFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewSignUpFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ForbiddenTechnique;
    private javax.swing.JPanel FormContainer;
    private javax.swing.JPanel FormSection;
    private javax.swing.JLabel SignInLabel;
    private javax.swing.JComboBox<String> currentSemComboBox;
    private javax.swing.JComboBox<String> departmentComboBox;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JComboBox<String> sectionComboBox;
    private javax.swing.JComboBox<String> sexComboBox;
    private javax.swing.JButton signUpButton;
    private javax.swing.JTextField studentNumberField;
    private javax.swing.JComboBox<String> yearLevelComboBox;
    // End of variables declaration//GEN-END:variables
}
